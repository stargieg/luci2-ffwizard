#!/bin/sh

. /lib/functions.sh
. /usr/share/libubox/jshn.sh

log() {
	logger -s -t ffwizard_autoconf $@
}

wlan_ifc=""
wifi_restart=1

log "ubus call network.wireless status"
wifi_data=`ubus call network.wireless status`
json_load "$wifi_data"
json_get_keys wifi_res
for i in $wifi_res ; do
	json_select $i
	json_get_var wifi_disabled disabled
	if [ $wifi_disabled == 1 ] ; then
		log "wifi $i is disabled. set enable"
		uci set wireless.$i.disabled=0
		uci set wireless.$i.country=DE
		#uci commit wireless
	else
		log "wifi $i allready enabled leave it untouch"
		wifi_restart=0
	fi
	json_select ".."
done

json_cleanup

if [ $wifi_restart == 1 ] ; then
	log "wifi restart and sleep 20s"
	/etc/init.d/network reload
	/bin/sleep 20
	log "ubus call network.wireless status"
	wifi_data=`ubus call network.wireless status`
	json_load "$wifi_data"
	json_get_keys wifi_res
	for i in $wifi_res ; do
		json_select $i
		json_get_var wifi_disabled disabled
		if [ $wifi_disabled == 0 ] ; then
			wlan_ifc="$wlan_ifc $i"
		fi
		json_select ".."
	done
fi

json_cleanup

for ifc in $wlan_ifc ; do
	log "ubus call iwinfo $ifc scan"
	scan_data=$(ubus call iwinfo scan '{ "device": "'$ifc'" }')
	json_load "$scan_data"
	json_select results
	json_get_keys scan_res
	quality=0
	ssid=""
	bssid=""
	channel=""
	mode="mesh"
	for i in $scan_res ; do
		json_select $i
		json_select encryption
		json_get_var sta_encryption enabled
		json_select ".."
		if [ $sta_encryption == 0 ] ; then
			json_get_var sta_mode mode
			# Depricated Ad-Hoc scan
			if [ $sta_mode == "Ad-Hoc" ] ; then
				json_get_var sta_ssid ssid
				if echo "$sta_ssid" | grep -q "freifunk\.net" ; then
					json_get_var sta_quality quality
					if [ $sta_quality -gt $quality ] ; then
						quality=$sta_quality
						json_get_var sta_bssid bssid
						json_get_var sta_channel channel
						#json_get_var sta_signal signal
						#json_get_var sta_quality_max quality_max
						ssid=$sta_ssid
						bssid=$sta_bssid
						channel=$sta_channel
						mode="adhoc"
					fi
				fi
			fi
			# Mesh Point scan
			if [ $sta_mode == "Mesh Point" ] ; then
				json_get_var sta_quality quality
				if [ $sta_quality -gt $quality ] ; then
					quality=$sta_quality
					json_get_var sta_channel channel
					# Additional related Infos
					#json_get_var sta_signal signal
					#json_get_var sta_quality_max quality_max
					channel=$sta_channel
					mode="mesh"
				fi
			fi
		fi
		json_select ".."
	done
	json_cleanup
	log "scan result for $ifc channel: $channel"
	if ! uci_get ffwizard $ifc >/dev/null ; then
		uci_add ffwizard wifi "$ifc"
	fi
	phy_idx=$(echo $ifc | cut -b6)
	uci_set ffwizard "$ifc" phy_idx $phy_idx
	uci_set ffwizard "$ifc" channel $channel
	uci_set ffwizard "$ifc" olsr_mesh 1
	if [ "$mode" == "adhoc" ] ; then
		# Depricated Ad-Hoc config
		log "scan result for $ifc ssid: $ssid bssid: $bssid channel: $channel"
		uci_set ffwizard "$ifc" ssid $ssid
		uci_set ffwizard "$ifc" bssid $bssid
		uci_set ffwizard "$ifc" iface_mode "adhoc"
	else
		uci_set ffwizard "$ifc" iface_mode "mesh"
	fi
done

uci_set ffwizard ffwizard enabled 1
uci_commit ffwizard
/etc/init.d/ffwizard restart

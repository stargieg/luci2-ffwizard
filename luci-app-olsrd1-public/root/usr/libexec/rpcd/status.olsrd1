#!/bin/sh
# Copyright (C) 2016 OpenWrt.org

. /lib/functions.sh
. /usr/share/libubox/jshn.sh
. /lib/functions/olsrd1.sh

case "$1" in
	list)
		json_init

		json_add_object "getVersion"
		json_close_object
		json_add_object "getNode"
		json_close_object
		json_add_object "getNeighbors"
		json_close_object
		json_add_object "getAttached_network"
		json_close_object
		json_add_object "getVersion6"
		json_close_object
		json_add_object "getNode6"
		json_close_object
		json_add_object "getNeighbors6"
		json_close_object
		json_add_object "getAttached_network6"
		json_close_object

		json_dump
	;;
	call)
		case "$2" in
			getVersion6)
				eval "$(echo /all | nc ::1 9090 | sed -n '/^[}{ ]/p' | jsonfilter -e 'version_text=@.version.releaseVersion' -e 'version_commit=@.version.sourceHash')"
				json_init
				json_add_array "version"
				json_add_object 0
				json_add_string "version_text" "${version_text}"
				json_add_string "version_commit" "${version_commit}"
				json_close_object
				json_close_array
				json_dump
			;;
			getVersion)
				eval "$(echo /all | nc 127.0.0.1 9090 | sed -n '/^[}{ ]/p' | jsonfilter -e 'version_text=@.version.releaseVersion' -e 'version_commit=@.version.sourceHash')"
				json_init
				json_add_array "version"
				json_add_object 0
				json_add_string "version_text" "${version_text}"
				json_add_string "version_commit" "${version_commit}"
				json_close_object
				json_close_array
				json_dump
			;;
			getNode6)
				echo /topology | nc ::1 9090 | sed -n '/^[}{ ]/p' 2>/dev/null
			;;
			getNode)
				echo /topology | nc 127.0.0.1 9090 | sed -n '/^[}{ ]/p' 2>/dev/null
			;;
			getNeighbors6)
				domain="$(uci_get luci_olsrd1 general domain)"
				[ -z "$domain" ] || domain=".$domain"
				eval $(echo /links | nc ::1 9090 | sed -n '/^[}{ ]/p' | jsonfilter -e 'neighbors=@.links[*].remoteIP')
				json_init
				json_add_array "neighbors"
				for neighbor in $neighbors ; do
					dev=""
					lladdr=""
					hostname=""
					lq=""
					nlq=""
					cost=""
					signal=0
					noise=0
					snr=0
					interface=""
					eval $(echo /links | nc ::1 9090 | sed -n '/^[}{ ]/p' | jsonfilter -e 'lq=@.links[@.remoteIP="'$neighbor'"].linkQuality' -e 'nlq=@.links[@.remoteIP="'$neighbor'"].neighborLinkQuality' -e 'cost=@.links[@.remoteIP="'$neighbor'"].linkCost')
					json_add_object 0
					json_add_string "originator" "${neighbor}"
					network_get_neighbour_by_ip "${neighbor}"
					json_add_string "lladdr" "${lladdr}"
					json_add_string "hostname" "${hostname}${domain}"
					lladdr="$(echo $lladdr | tr '[a-f]' '[A-F]')"
					eval $(ubus call iwinfo assoclist '{"device":"'$dev'","mac":"'$lladdr'"}' 2>/dev/null | jsonfilter -e 'noise=@.noise' -e 'signal=@.signal' 2>/dev/null)
					snr=$((((noise*-1)) - ((signal*-1))))
					network_get_name_by_device interface $dev
					json_add_string "lq" "${lq}"
					json_add_string "nlq" "${nlq}"
					json_add_string "cost" "${cost}"
					json_add_string "interface" "${interface}"
					json_add_string "signal" "${signal}"
					json_add_string "noise" "${noise}"
					json_add_string "snr" "${snr}"
					json_close_object
				done
				json_close_array
				json_dump
			;;
			getNeighbors)
				domain="$(uci_get luci_olsrd1 general domain)"
				[ -z "$domain" ] || domain=".$domain"
				eval $(echo /links | nc 127.0.0.1 9090 | sed -n '/^[}{ ]/p' | jsonfilter -e 'neighbors=@.links[*].remoteIP')
				json_init
				json_add_array "neighbors"
				for neighbor in $neighbors ; do
					dev=""
					lladdr=""
					hostname=""
					lq=""
					nlq=""
					cost=""
					signal=0
					noise=0
					snr=0
					interface=""
					mode=""
					eval $(echo /links | nc 127.0.0.1 9090 | sed -n '/^[}{ ]/p' | jsonfilter -e 'lq=@.links[@.remoteIP="'$neighbor'"].linkQuality' -e 'nlq=@.links[@.remoteIP="'$neighbor'"].neighborLinkQuality' -e 'cost=@.links[@.remoteIP="'$neighbor'"].linkCost')
					json_add_object 0
					json_add_string "originator" "${neighbor}"
					network_get_neighbour_by_ip4 "${neighbor}"
					json_add_string "lladdr" "${lladdr}"
					json_add_string "hostname" "${hostname}${domain}"
					#Workaround for AirOS AP Bridges without olsr :-(
					eval $(ubus call iwinfo info '{"device":"'$dev'"}' 2>/dev/null | jsonfilter -e 'mode=@.mode' 2>/dev/null)
					if [ "$mode" == "Client" ] ; then
						eval $(ubus call iwinfo assoclist '{"device":"'$dev'"}' 2>/dev/null | jsonfilter -e 'noise=@.results[0].noise' -e 'signal=@.results[0].signal' 2>/dev/null)
					else
						lladdr="$(echo $lladdr | tr '[a-f]' '[A-F]')"
						eval $(ubus call iwinfo assoclist '{"device":"'$dev'","mac":"'$lladdr'"}' 2>/dev/null | jsonfilter -e 'noise=@.noise' -e 'signal=@.signal' 2>/dev/null)
					fi
					snr=$((((noise*-1)) - ((signal*-1))))
					network_get_name_by_device interface $dev
					json_add_string "lq" "${lq}"
					json_add_string "nlq" "${nlq}"
					json_add_string "cost" "${cost}"
					json_add_string "interface" "${interface}"
					json_add_string "signal" "${signal}"
					json_add_string "noise" "${noise}"
					json_add_string "snr" "${snr}"
					json_close_object
				done
				json_close_array
				json_dump
			;;
			getAttached_network6)
				echo /hna | nc ::1 9090 | sed -n '/^[}{ ]/p' 2>/dev/null
			;;
			getAttached_network)
				echo /hna | nc 127.0.0.1 9090 | sed -n '/^[}{ ]/p' 2>/dev/null
			;;
		esac
	;;
esac
